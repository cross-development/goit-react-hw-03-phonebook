{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/ContactListItem/ContactListItem.module.css","components/Filter/Filter.module.css","components/Section/Section.module.css","components/ContactList/ContactList.module.css","components/Filter/Filter.js","components/Section/Section.js","components/ContactListItem/ContactListItem.js","components/ContactList/ContactList.js","components/ContactForm/ContactForm.js","components/App/App.js","index.js"],"names":["module","exports","Filter","title","value","onChangeFilter","className","styles","filterWrapper","input","type","autoComplete","onChange","e","target","defaultProps","Section","children","section","ContactListItem","name","number","onRemove","item","contact","button","onClick","ContactList","contacts","onRemoveContact","list","map","id","key","ContactForm","state","handleChange","setState","handleSubmit","preventDefault","props","onAddContact","this","form","onSubmit","autoFocus","Component","App","filter","addContact","find","toLowerCase","alert","uuid","prevState","getVisibleContacts","includes","removeContactById","contactId","handleChangeFilter","existContact","localStorage","getItem","JSON","parse","prevProps","setItem","stringify","visibleContact","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.33d64fdc.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__2Mh4k\",\"input\":\"ContactForm_input__3lVfE\",\"button\":\"ContactForm_button__AbmeW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ContactListItem_item__S6ANi\",\"contact\":\"ContactListItem_contact__3rOO1\",\"button\":\"ContactListItem_button__3tmGb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterWrapper\":\"Filter_filterWrapper__2ttGp\",\"input\":\"Filter_input__iaioS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__KCsMZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__1z82z\"};","//Core\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\n//Styles\r\nimport styles from './Filter.module.css';\r\n\r\nconst Filter = ({ title, value, onChangeFilter }) => (\r\n\t<div className={styles.filterWrapper}>\r\n\t\t<label>\r\n\t\t\t{title}\r\n\t\t\t<input\r\n\t\t\t\tclassName={styles.input}\r\n\t\t\t\ttype=\"text\"\r\n\t\t\t\tautoComplete=\"off\"\r\n\t\t\t\tvalue={value}\r\n\t\t\t\tonChange={e => onChangeFilter(e.target.value)}\r\n\t\t\t/>\r\n\t\t</label>\r\n\t</div>\r\n);\r\n\r\nFilter.defaultProps = {\r\n\ttitle: '',\r\n};\r\n\r\nFilter.propTypes = {\r\n\ttitle: PropTypes.string,\r\n\tvalue: PropTypes.string.isRequired,\r\n\tonChangeFilter: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Filter;\r\n","//Core\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\n//Styles\r\nimport styles from './Section.module.css';\r\n\r\nconst Section = ({ title, children }) => (\r\n\t<section className={styles.section}>\r\n\t\t{title && <h2>{title}</h2>}\r\n\t\t{children}\r\n\t</section>\r\n);\r\n\r\nSection.defaultProps = {\r\n\ttitle: '',\r\n};\r\n\r\nSection.propTypes = {\r\n\ttitle: PropTypes.string,\r\n\tchildren: PropTypes.node.isRequired,\r\n};\r\n\r\nexport default Section;\r\n","//Core\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\n//Styles\r\nimport styles from './ContactListItem.module.css';\r\n\r\nconst ContactListItem = ({ name, number, onRemove }) => (\r\n\t<li className={styles.item}>\r\n\t\t<p className={styles.contact}>\r\n\t\t\t<span>{name}:</span> {number}\r\n\t\t</p>\r\n\t\t<button type=\"button\" className={styles.button} onClick={onRemove}>\r\n\t\t\tDelete\r\n\t\t</button>\r\n\t</li>\r\n);\r\n\r\nContactListItem.propTypes = {\r\n\tname: PropTypes.string.isRequired,\r\n\tnumber: PropTypes.string.isRequired,\r\n\tonRemove: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactListItem;\r\n","//Core\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\n//Components\r\nimport ContactListItem from '../ContactListItem';\r\n//Styles\r\nimport styles from './ContactList.module.css';\r\n\r\nconst ContactList = ({ contacts, onRemoveContact }) => (\r\n\t<ul className={styles.list}>\r\n\t\t{contacts.map(({ id, name, number }) => (\r\n\t\t\t<ContactListItem key={id} name={name} number={number} onRemove={() => onRemoveContact(id)} />\r\n\t\t))}\r\n\t</ul>\r\n);\r\n\r\nContactList.propTypes = {\r\n\tonRemoveContact: PropTypes.func.isRequired,\r\n\tcontacts: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n};\r\n\r\nexport default ContactList;\r\n","//Core\r\nimport React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n//Styles\r\nimport styles from './ContactForm.module.css';\r\n\r\nexport class ContactForm extends Component {\r\n\tstatic propTypes = {\r\n\t\tonAddContact: PropTypes.func.isRequired,\r\n\t};\r\n\r\n\tstate = {\r\n\t\tname: '',\r\n\t\tnumber: '',\r\n\t};\r\n\r\n\thandleChange = e => {\r\n\t\tconst { name, value } = e.target;\r\n\r\n\t\tthis.setState({ [name]: value });\r\n\t};\r\n\r\n\thandleSubmit = e => {\r\n\t\te.preventDefault();\r\n\r\n\t\tconst { name, number } = this.state;\r\n\r\n\t\tthis.props.onAddContact(name, number);\r\n\t\tthis.setState({ name: '', number: '' });\r\n\t};\r\n\r\n\trender() {\r\n\t\tconst { name, number } = this.state;\r\n\r\n\t\treturn (\r\n\t\t\t<form className={styles.form} onSubmit={this.handleSubmit}>\r\n\t\t\t\t<label>\r\n\t\t\t\t\tName\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\tclassName={styles.input}\r\n\t\t\t\t\t\tautoFocus\r\n\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\tname=\"name\"\r\n\t\t\t\t\t\tautoComplete=\"off\"\r\n\t\t\t\t\t\tvalue={name}\r\n\t\t\t\t\t\tonChange={this.handleChange}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</label>\r\n\r\n\t\t\t\t<label>\r\n\t\t\t\t\tNumber\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\tclassName={styles.input}\r\n\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\tname=\"number\"\r\n\t\t\t\t\t\tautoComplete=\"off\"\r\n\t\t\t\t\t\tvalue={number}\r\n\t\t\t\t\t\tonChange={this.handleChange}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</label>\r\n\r\n\t\t\t\t<button className={styles.button} type=\"submit\">\r\n\t\t\t\t\tAdd contact\r\n\t\t\t\t</button>\r\n\t\t\t</form>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default ContactForm;\r\n","//Core\nimport React, { Component } from 'react';\n//Components\nimport Filter from '../Filter';\nimport Section from '../Section';\nimport ContactList from '../ContactList';\nimport ContactForm from '../ContactForm';\n//Utils\nimport { v4 as uuid } from 'uuid';\n\nexport class App extends Component {\n\tstate = {\n\t\tcontacts: [],\n\t\tfilter: '',\n\t};\n\n\tcomponentDidMount() {\n\t\tconst existContact = localStorage.getItem('contacts');\n\n\t\tif (existContact) {\n\t\t\tthis.setState({ contacts: JSON.parse(existContact) });\n\t\t}\n\t}\n\n\tcomponentDidUpdate(prevProps, prevState) {\n\t\tconst { contacts } = this.state;\n\n\t\tif (prevState.contacts !== contacts) {\n\t\t\tlocalStorage.setItem('contacts', JSON.stringify(contacts));\n\t\t}\n\t}\n\n\taddContact = (name, number) => {\n\t\tconst { contacts } = this.state;\n\n\t\tconst isContactExists = contacts.find(\n\t\t\tcontact => contact.name.toLowerCase() === name.toLowerCase(),\n\t\t);\n\n\t\tif (isContactExists) {\n\t\t\treturn alert(`${name} is already in contacts`);\n\t\t}\n\n\t\tconst contact = {\n\t\t\tid: uuid(),\n\t\t\tname,\n\t\t\tnumber,\n\t\t};\n\n\t\tthis.setState(prevState => ({ contacts: [...prevState.contacts, contact] }));\n\t};\n\n\tgetVisibleContacts = () => {\n\t\tconst { contacts, filter } = this.state;\n\n\t\treturn contacts.filter(({ name }) => name.toLowerCase().includes(filter.toLowerCase()));\n\t};\n\n\tremoveContactById = contactId => {\n\t\tthis.setState(prevState => ({\n\t\t\tcontacts: prevState.contacts.filter(({ id }) => id !== contactId),\n\t\t}));\n\t};\n\n\thandleChangeFilter = filter => {\n\t\tthis.setState({ filter });\n\t};\n\n\trender() {\n\t\tconst { contacts, filter } = this.state;\n\n\t\tconst visibleContact = this.getVisibleContacts();\n\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<Section title=\"Phonebook\">\n\t\t\t\t\t<ContactForm onAddContact={this.addContact} />\n\t\t\t\t</Section>\n\n\t\t\t\t<Section title=\"Contacts\">\n\t\t\t\t\t{contacts.length > 1 && (\n\t\t\t\t\t\t<Filter\n\t\t\t\t\t\t\ttitle=\"Find contacts by name\"\n\t\t\t\t\t\t\tvalue={filter}\n\t\t\t\t\t\t\tonChangeFilter={this.handleChangeFilter}\n\t\t\t\t\t\t/>\n\t\t\t\t\t)}\n\n\t\t\t\t\t{contacts.length > 0 && (\n\t\t\t\t\t\t<ContactList contacts={visibleContact} onRemoveContact={this.removeContactById} />\n\t\t\t\t\t)}\n\t\t\t\t</Section>\n\t\t\t</>\n\t\t);\n\t}\n}\n\nexport default App;\n","//Core\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n//Components\nimport App from './components/App';\n//Styles\nimport './index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}